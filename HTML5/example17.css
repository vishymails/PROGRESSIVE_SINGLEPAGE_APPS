



.one {
    height: 400px;
    width: 100%;
    background: radial-gradient(green, red);
  }
  
  .two {
    height: 400px;
    width: 100%;
    background: radial-gradient(green 20px, red 25%, #0000FF 40%);
  }
  
  .three {
    height: 400px;
    width: 100%;
    background: radial-gradient(at 0% 20%, green 20px, red 25%, #0000FF 40%);
  }
  
  .four {
    height: 400px;
    width: 100%;
    background: radial-gradient(ellipse closest-side, green 10%, red);
  }
  
  .five {
    height: 400px;
    width: 100%;
    background: conic-gradient( green, red);
  }
  
  .six {
    height: 400px;
    width: 100%;
    background: conic-gradient(at 0% 40%, green, red, blue, purple);
  }
  
  footer {
    height: 400px;
    width: 100%;
    background: repeating-linear-gradient(to left, red 5px, blue 15px, yellow 10px);
  }
  
  header {
    height: 400px;
    width: 100%;
    background: repeating-radial-gradient(red 5px, blue 15px, yellow 10px);
  }
  
  



  

.one {
    transform: translate(100px, 200px);
    background: red;
  }
  
  .two {
    transform: rotate(45deg);
    background: green;
    text-align: center;
    width: 200px;
  }
  
  footer {
    transform: matrix(0.5, 0.3, 0, 1, 0, 0);
    background: aqua;
    text-align: center;
    width: 200px;
    height: 100px;
    overflow: hidden;
  }
  
  .five {
    transform: skewY(45deg);
    background: purple;
    text-align: center;
    width: 200px;
    height: 100px;
    overflow: hidden;
  }
  
  .three {
    transform: scale(0.5, 4);
    background: yellow;
    text-align: center;
    width: 200px;
    height: 100px;
    overflow: hidden;
  }
  
  .four {
    transform: scaleX(2);
    background: pink;
    text-align: center;
    width: 200px;
    height: 100px;
    overflow: hidden;
  }
  
  .six {
    transform: translate(100px, -200px);
    background: blue;
  }
  
  
  
  
  
  
  
  
  
  
  .one {
    transform: rotateX(180deg);
    background: red;
  }
  
  .two {
    transform: rotateY(180deg);
    background: green;
    text-align: center;
    width: 200px;
  }
  
  .three {
    transform: rotateZ(180deg);
    background: yellow;
    text-align: center;
    width: 200px;
    height: 100px;
    overflow: hidden;
  }
  
  .four {
    transform: scale3d(1, 2, 3);
    background: pink;
    text-align: center;
    width: 200px;
    height: 100px;
    overflow: hidden;
  }
  
  .five {
    transform: scaleZ(3);
    background: purple;
    text-align: center;
    width: 200px;
    height: 100px;
    overflow: hidden;
  }
  
  .six {
    background: blue;
  }
  
  footer {
    background: aqua;
    text-align: center;
    width: 200px;
    height: 100px;
    overflow: hidden;
  }
  
  
  
  
  
  
  
  
  
  
  The animation shorthand CSS property applies an animation between styles. It is a shorthand for animation-name, animation-duration, animation-timing-function, animation-delay, animation-iteration-count, animation-direction, animation-fill-mode, and animation-play-state.
  
  Initial value	as each of the properties of the shorthand:
  
  animation-name: none
  
  animation-duration: 0s
  
  animation-timing-function: ease
  
  animation-delay: 0s
  
  animation-iteration-count: 1
  
  animation-direction: normal
  
  animation-fill-mode: none
  
  animation-play-state: running
  
  Applies to	all elements, ::before and ::after pseudo-elements
  
  Inherited	no
  
  Computed value	as each of the properties of the shorthand:
  
  animation-name: as specified
  
  animation-duration: as specified
  
  animation-timing-function: as specified
  
  animation-delay: as specified
  
  animation-direction: as specified
  
  animation-iteration-count: as specified
  
  animation-fill-mode: as specified
  
  animation-play-state: as specified
  
  https://developer.mozilla.org/en-US/docs/Web/CSS/animation
  
  /* @keyframes duration | timing-function | delay | 
  iteration-count | direction | fill-mode | play-state | name */
  animation: 3s ease-in 1s 2 reverse both paused slidein;
  
  /* @keyframes name | duration | timing-function | delay */
  animation: 3s linear 1s slidein;
  
  /* @keyframes name | duration */
  animation: slidein 3s;
  
  @keyframes example {
    0% {
      width: 100px;
      left: 100px;
    }
    25% {
      width: 200px
    }
    50% {
      width: 300px
    }
    75% {
      width: 400px;
      left: 400px;
    }
    100% {
      width: 500px
    }
  }
  
  .one {
    position: absolute;
    left: 0px;
    top: 0px;
    width: 50px;
    height: 200px;
    animation-name: example;
    animation-duration: 2s;
    background: red;
    animation-iteration-count: infinite;
    animation-direction: alternate;
  }